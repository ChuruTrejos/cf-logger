version: "3"

services:
    coldfusion:
        container_name: shuCustomLogger
        build:
            context: ./app
            dockerfile: Dockerfile
        image: app
        depends_on:
            - mysql
        #            - redis
        #            - addons
        ports:
            - "8500:8500"
        volumes:
            - "./app:/app"
            - "./cflogs:/opt/coldfusion/cfusion/logs"
        env_file:
            - coldfusion.env
        healthcheck:
            test: curl -f http://addons:8989/solr/ || exit 1
            interval: 1m
            timeout: 3s
        deploy:
            #mode: replicated
            #replicas: 2
            restart_policy:
                condition: on-failure
            update_config:
                parallelism: 1
                delay: 10s
        networks:
            - cfCustomLoggerNet

    addons:
        container_name: addons
        image: eaps-docker-coldfusion.bintray.io/cf/addons:latest-2018
        environment:
            - acceptEULA=YES
        ports:
            - "8989:8989"
        networks:
            - cfCustomLoggerNet

    mysql:
        container_name: mysql
        image: mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - "3306:3306"
        volumes:
            - "./database/mysql_data:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: "password"
            #MYSQL_USER: "mysql"
            #MYSQL_PASSWORD: "password"
            #MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        networks:
            - cfCustomLoggerNet

    #    redis:
    #        container_name: redis
    #        image: redis:6.0.7
    #        ports:
    #            - "6381:6379"
    #        volumes:
    #            - "./database/redis_data:/data"
    #        networks:
    #            - cfCustomLoggerNet

    #    pmt:
    #        container_name: pmt
    #        image: eaps-docker-coldfusion.bintray.io/cf/pmt:latest-2018
    #        depends_on:
    #            - coldfusion
    #        ports:
    #            - "9101:9101"
    #        env_file:
    #            - pmt.env
    #        healthcheck:
    #            test: curl -f http://localhost:9101/
    #            interval: 1m
    #            timeout: 3s
    #        networks:
    #            - cfCustomLoggerNet

    # NOTE: Add a way to manage and test the SQL
    adminer:
        container_name: adminer
        image: adminer:4
        ports:
            - "8080:8080"
        networks:
            - cfCustomLoggerNet

    sqlpad:
        container_name: sqlpad
        image: sqlpad/sqlpad:5
        ports:
            - "3000:3000"
        #env_file:
        #    - sqlpad.env
        environment:
            SQLPAD_ADMIN: "sqlpad@local"
            SQLPAD_ADMIN_PASSWORD: "password"
            SQLPAD_APP_LOG_LEVEL: debug
            SQLPAD_WEB_LOG_LEVEL: warn
            SQLPAD_DB_PATH: "/var/lib/sqlpad"

        volumes:
            - "./database/sqlpad:/var/lib/sqlpad"
        networks:
            - cfCustomLoggerNet

volumes:
    #    redis_data:
    app_data:
    cf_root:
    mysql:

networks:
    cfCustomLoggerNet:
